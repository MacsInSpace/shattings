#!/bin/sh

# set-mac-defaults
# ============
#
# This file was written by Robert Quattlebaum <darco@deepdarc.com>.
#
# This work is provided as-is. Unless otherwise provided in writing,
# Robert Quattlebaum makes no representations or warranties of any
# kind concerning this work, express, implied, statutory or otherwise,
# including without limitation warranties of title, merchantability,
# fitness for a particular purpose, non infringement, or the absence
# of latent or other defects, accuracy, or the present or absence of
# errors, whether or not discoverable, all to the greatest extent
# permissible under applicable law.
# 
# To the extent possible under law, Robert Quattlebaum has waived all
# copyright and related or neighboring rights to this work. This work
# is published from the United States.
# 
# I, Robert Quattlebaum, dedicate any and all copyright interest in
# this work to the public domain. I make this dedication for the
# benefit of the public at large and to the detriment of my heirs and
# successors. I intend this dedication to be an overt act of
# relinquishment in perpetuity of all present and future rights to
# this code under copyright law. In jurisdictions where this is not
# possible, I hereby release this code under the Creative Commons
# Zero (CC0) license.
# 
#  * <http://creativecommons.org/publicdomain/zero/1.0/>
#

#defaults write com.apple.Terminal "Default Window Settings" "Pro"
#defaults write com.apple.Terminal "Startup Window Settings" "Pro"

defaults write com.apple.AppleMultitouchTrackpad "clicking" -bool true
defaults write com.apple.AppleMultitouchTrackpad "HIDScrollZoomModifierMask" -int 262144
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad "clicking" -bool true
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad "HIDScrollZoomModifierMask" -int 262144
defaults write com.apple.systempreferences "ShowAllMode" -bool true
defaults write -globalDomain "NSAutomaticDashSubstitutionEnabled" -bool false
defaults write -globalDomain "NSAutomaticQuoteSubstitutionEnabled" -bool false

defaults write com.apple.Safari AlwaysShowTabBar -bool true
defaults write com.apple.Safari IncludeDevelopMenu -bool true
defaults write com.apple.Safari ShowFavoritesBar-v2 -bool true
defaults write com.apple.Safari ShowStatusBar -bool true
defaults write com.apple.Safari WebKitDeveloperExtrasEnabledPreferenceKey -bool true

defaults write com.apple.dt.Xcode DVTTextAutoInsertCloseBrace -bool false
defaults write com.apple.dt.Xcode DVTTextAutoInsertOpenBracket -bool false
defaults write com.apple.dt.Xcode DVTTextUsesSyntaxAwareIndenting -bool false

defaults write com.apple.finder FK_SavedViewStyle -string Nlsv
defaults write com.apple.finder FXPreferredViewStyle -string Nlsv
defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool true
defaults write com.apple.finder ShowHardDrivesOnDesktop -bool true
defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool true
defaults write com.apple.finder ShowMountedServersOnDesktop -bool true

chflags nohidden ~/Library/

term_settings="`defaults read com.apple.Terminal 'Default Window Settings'`"

[ `uname` = 'Darwin' ] || {
	echo 'Not a Mac!'
	exit 1
}

if [ $term_settings '!=' "Pro" ] && [ $term_settings '!=' "darco" ]
then
	echo Setting up terminal settings...
	open ~/.shattings/other/darco.terminal
	sleep 1
	defaults write com.apple.Terminal "Default Window Settings" "darco"
	defaults write com.apple.Terminal "Startup Window Settings" "darco"
fi

[ -f ~/Library/KeyBindings/DefaultKeyBinding.dict ] || {
	echo Setting up key bindings...
	mkdir -p ~/Library/KeyBindings
	ln -s ~/.shattings/Library/KeyBindings/DefaultKeyBinding.dict ~/Library/KeyBindings/DefaultKeyBinding.dict
}

{
	echo Changing key repeat rate to be FAST...
	defaults write -globalDomain "InitialKeyRepeat" -int "15"
	defaults write -globalDomain "KeyRepeat" -int "2"
	[ -x /System/Library/PrivateFrameworks/Admin.framework/Versions/A/Resources/activateSettings ] && /System/Library/PrivateFrameworks/Admin.framework/Versions/A/Resources/activateSettings -u -newKeyboardContext
}

